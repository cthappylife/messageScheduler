// <auto-generated />
using System;
using MessageScheduler.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MessageScheduler.Persistence.Migrations
{
    [DbContext(typeof(MessageSchedulerContext))]
    [Migration("20191028212003_removeExecutionTime")]
    partial class removeExecutionTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MessageScheduler.Models.Receiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PhoneNumber")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Receiver");
                });

            modelBuilder.Entity("MessageScheduler.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RecurrenceType");

                    b.HasKey("Id");

                    b.ToTable("Schedule");

                    b.HasDiscriminator<int>("RecurrenceType");
                });

            modelBuilder.Entity("MessageScheduler.Models.ScheduledMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnName("Message")
                        .HasMaxLength(255);

                    b.Property<int>("ReceiverId")
                        .HasColumnName("ReceiverId");

                    b.Property<int>("ScheduleId")
                        .HasColumnName("ScheduleId");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduledMessage");
                });

            modelBuilder.Entity("MessageScheduler.Models.SentMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ScheduledMessageId");

                    b.Property<bool>("SentSuccessfully")
                        .HasColumnName("SentSuccessfully");

                    b.Property<DateTime>("SentTime")
                        .HasColumnName("SentTime")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ScheduledMessageId");

                    b.ToTable("SentMessage");
                });

            modelBuilder.Entity("MessageScheduler.Models.Schedules.CustomSchedule", b =>
                {
                    b.HasBaseType("MessageScheduler.Models.Schedule");

                    b.Property<DateTime>("Date");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("MessageScheduler.Models.Schedules.DailySchedule", b =>
                {
                    b.HasBaseType("MessageScheduler.Models.Schedule");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("MessageScheduler.Models.Schedules.MonthlySchedule", b =>
                {
                    b.HasBaseType("MessageScheduler.Models.Schedule");

                    b.Property<int>("MonthDay");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("MessageScheduler.Models.Schedules.WeeklySchedule", b =>
                {
                    b.HasBaseType("MessageScheduler.Models.Schedule");

                    b.Property<int>("WeekDays");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("MessageScheduler.Models.ScheduledMessage", b =>
                {
                    b.HasOne("MessageScheduler.Models.Receiver", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MessageScheduler.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MessageScheduler.Models.SentMessage", b =>
                {
                    b.HasOne("MessageScheduler.Models.ScheduledMessage", "ScheduledMessage")
                        .WithMany()
                        .HasForeignKey("ScheduledMessageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
